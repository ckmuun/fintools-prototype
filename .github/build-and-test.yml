# build and test golang services

# TODO somehow we need to separate this into unit and integration / e2e tests. the e2e tests all fail by definition

name: build-and-test

on: [push]
jobs:
  build:
    runs-on: ubuntu-16.04
    name: golang-build-test
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '^1.14.10'
      - run: go version
      # print repository contents
      - run: ls

      - run: cd datagen-cord && ls

      - run: echo "now executing tests for submodules"
      - run: cd reccengine && sh ../scripts/test-go-module.sh


# This pushes a docker image to GH registry, commented out because we use Quay.io
#  publish-latest:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - run: ls
#      - run: cd datagen-cord && ls
#      - uses: ckmuun/gp-docker-action@0.0.3
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          image-name: datagen-cord
#          image-tag: canary
#          dockerfile: Dockerfile
#          # build-context: datagen-cord
#          build-folder: datagen-cord



        #  build-and-push-image:
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Build container image
#        uses: docker/build-push-action@v1
#        with:
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#          registry: docker.pkg.github.com
#          repository: ckmuun/blumhuegel/
#          tag_with_sha: true
#          tag_with_ref: true



